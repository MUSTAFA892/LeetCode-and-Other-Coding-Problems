## **What your code is trying to do**

* **Goal**: Find the longest contiguous subarray of fruits with **at most 2 distinct types**.
* **Idea**: Use a **sliding window** with `left` and `right` pointers and a `freq_map` to track fruit counts inside the window.
* **Flow**:

  1. Expand the window by adding `fruits[right]` into `freq_map`.
  2. If you have **≤ 2 types**, just expand (`right += 1`) and update the window size.
  3. If you have **> 2 types**, shrink the window from the left:

     * Reduce count of `fruits[left]`.
     * If count hits 0, remove that fruit from `freq_map`.
     * Move both `left` and `right` forward.
  4. Keep track of the maximum window size.

---

## **Step-by-step dry run**

Let’s use:

```
fruits = [1, 2, 3, 2, 2]
```

---

### **Initial State**

```
left = 0, right = 0
freq_map = {}
current_size = 0
window_size = 0
```

---

### **Iteration 1**

* `fruits[right] = 1`
* Add → `freq_map = {1: 1}`
* `len(freq_map) = 1` → valid
* `right = 1`
* `current_size = 1 - 0 = 1`
* `window_size = max(0, 1) = 1`

---

### **Iteration 2**

* `fruits[right] = 2`
* Add → `freq_map = {1: 1, 2: 1}`
* `len(freq_map) = 2` → valid
* `right = 2`
* `current_size = 2 - 0 = 2`
* `window_size = max(1, 2) = 2`

---

### **Iteration 3**

* `fruits[right] = 3`
* Add → `freq_map = {1: 1, 2: 1, 3: 1}`
* `len(freq_map) = 3` → invalid
  **Shrink window**:

  * Decrease `freq_map[fruits[left]]` → `freq_map[1] = 0` → delete key → `freq_map = {2: 1, 3: 1}`
  * `left = 1`
  * `right = 3`  (**← here is a problem: you’re incrementing `right` in shrink phase**)
  * `current_size = 3 - 1 = 2`
* `window_size = max(2, 2) = 2`

---

### **Iteration 4**

* `fruits[right] = 2`
* Add → `freq_map = {2: 2, 3: 1}`
* `len(freq_map) = 2` → valid
* `right = 4`
* `current_size = 4 - 1 = 3`
* `window_size = max(2, 3) = 3`

---

### **Iteration 5**

* `fruits[right] = 2`
* Add → `freq_map = {2: 3, 3: 1}`
* `len(freq_map) = 2` → valid
* `right = 5` (now out of range → loop ends)
* `current_size = 5 - 1 = 4`
* `window_size = max(3, 4) = 4`

---

## **Final result**

`window_size = 4` → matches expected.
