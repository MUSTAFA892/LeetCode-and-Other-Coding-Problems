### Problem Breakdown:

* **Fruits array:** Represents the quantity of each fruit type.
* **Baskets array:** Represents the capacity of each basket.
* Each fruit must be placed in the **leftmost available basket** that can hold the quantity of the fruit.
* Once a fruit is placed into a basket, **that basket can’t be reused** for any other fruit.
* If a fruit cannot be placed into any basket, it remains **unplaced**.

You are asked to return the number of **fruit types that remain unplaced** after attempting to place them in baskets.

---

### How the Code Works:

1. **Iterate through all fruits:**

   * For each fruit, try to find the **first basket** that can hold the fruit.

2. **If a suitable basket is found:**

   * The basket's capacity is enough to hold the fruit, so the fruit is placed in that basket, and the basket is **removed** from the list.

3. **If no suitable basket is found:**

   * The fruit is **unplaced**, and you move to the next fruit.

4. Finally, you calculate how many fruits could not be placed in any basket.

Since baskets are removed once used, the remaining **baskets length** after placing all fruits gives us the **number of unplaced fruits**.

---

### Working Example:

Let’s walk through an example based on the problem statement:

#### Input:

* `fruits = [3, 5, 2]`  (This represents three types of fruits with quantities 3, 5, and 2.)
* `baskets = [4, 1, 5]`  (There are three baskets with capacities 4, 1, and 5.)

#### Step-by-step placement:

1. **Fruit 3**:

   * Try basket 4 → fits because 3 ≤ 4. ✅
   * Place fruit 3 in basket 4. Remove basket 4 from the list.
   * Remaining baskets: `[1, 5]`

2. **Fruit 5**:

   * Try basket 1 → too small, because 5 > 1. ❌
   * Try basket 5 → fits because 5 ≤ 5. ✅
   * Place fruit 5 in basket 5. Remove basket 5 from the list.
   * Remaining baskets: `[1]`

3. **Fruit 2**:

   * Try basket 1 → too small, because 2 > 1. ❌
   * No other baskets left, so fruit 2 cannot be placed.

#### Result:

* **Unplaced fruits:** 1 (Fruit type 2 is unplaced).
* **Remaining baskets:** 1 (Only basket with capacity 1 remains).

The correct result should be **1**, as **one fruit type remains unplaced**.